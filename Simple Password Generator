import tkinter as tk
from tkinter import ttk, messagebox
import random
import string
import pyperclip
class PasswordGeneratorApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Password Generator")

        self.length_label = ttk.Label(root, text="Password Length:")
        self.length_label.grid(row=0, column=0, padx=5, pady=5, sticky="w")
        self.length_entry = ttk.Entry(root, width=10)
        self.length_entry.grid(row=0, column=1, padx=5, pady=5)

        self.complexity_label = ttk.Label(root, text="Password Complexity:")
        self.complexity_label.grid(row=1, column=0, padx=5, pady=5, sticky="w")
        self.complexity_combo = ttk.Combobox(root, values=["Low", "Medium", "High"])
        self.complexity_combo.current(1)
        self.complexity_combo.grid(row=1, column=1, padx=5, pady=5)

        self.security_rules_label = ttk.Label(root, text="Security Rules:")
        self.security_rules_label.grid(row=2, column=0, padx=5, pady=5, sticky="w")
        self.security_rules_checkboxes = {}
        rules = ["Include Uppercase", "Include Lowercase", "Include Numbers", "Include Symbols"]
        for i, rule in enumerate(rules):
            var = tk.BooleanVar(value=True)
            checkbox = ttk.Checkbutton(root, text=rule, variable=var)
            checkbox.grid(row=i+3, column=0, columnspan=2, padx=5, pady=2, sticky="w")
            self.security_rules_checkboxes[rule] = var

        self.copy_to_clipboard_var = tk.BooleanVar(value=True)
        self.copy_to_clipboard_checkbox = ttk.Checkbutton(root, text="Copy to Clipboard", variable=self.copy_to_clipboard_var)
        self.copy_to_clipboard_checkbox.grid(row=7, column=0, columnspan=2, padx=5, pady=5, sticky="w")

        self.generate_button = ttk.Button(root, text="Generate Password", command=self.generate_password)
        self.generate_button.grid(row=8, column=0, columnspan=2, padx=5, pady=5)

        self.generated_password_label = ttk.Label(root, text="")
        self.generated_password_label.grid(row=9, column=0, columnspan=2, padx=5, pady=5)

    def generate_password(self):
        length = int(self.length_entry.get())
        complexity = self.complexity_combo.get()
        security_rules = {rule: var.get() for rule, var in self.security_rules_checkboxes.items()}

        if length <= 0:
            messagebox.showerror("Error", "Password length must be greater than 0")
            return

        characters = ''
        if security_rules["Include Uppercase"]:
            characters += string.ascii_uppercase
        if security_rules["Include Lowercase"]:
            characters += string.ascii_lowercase
        if security_rules["Include Numbers"]:
            characters += string.digits
        if security_rules["Include Symbols"]:
            characters += string.punctuation

        if not characters:
            messagebox.showerror("Error", "Please select at least one character type.")
            return

        password = ''.join(random.choice(characters) for _ in range(length))
        self.generated_password_label.config(text="Generated Password: " + password)

        if self.copy_to_clipboard_var.get():
            pyperclip.copy(password)
            messagebox.showinfo("Info", "Password copied to clipboard!")

def main():
    root = tk.Tk()
    app = PasswordGeneratorApp(root)
    root.mainloop()

if __name__ == "__main__":
    main()
